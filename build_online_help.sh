#!/bin/bash

# 
# Script that invokes the Make file generated by Sphinx and also performs other stuff
#

# Variable put in place by Jenkins
cd $WORKSPACE
echo Building online_help-$GIT_BRANCH_PARSED-$BUILD_NUMBER.zip
export SPHINXOPTS="-E -n -w build_online_help.log"
make clean html

echo ===============================================================================
echo Checking errors occurred during the generation of the online help. The errors "WARNING: duplicate label" are ignored
echo because they do not imply an actual problem. 
echo ===============================================================================

ERRORS_COUNT=`cat build_online_help.log | grep --invert-match "WARNING: duplicate label" | wc -l`
if [ "$ERRORS_COUNT" -gt "0" ]; then
    
    echo ERROR: There were errors in the generation - in addition to the "WARNING: duplicate label" errors, which are expected:
    cat build_online_help.log | grep --invert-match "WARNING: duplicate label"
    exit 1
fi 

echo ===============================================================================
echo Searching for ambiguous references...
echo ===============================================================================
cd $WORKSPACE
mvn test

if [ $? -eq 0 ]
then
    echo There are no ambiguous references
else
    exit 1
fi

echo ===============================================================================
echo Validating if there are links to external web sites that are broken. 
echo ===============================================================================

export SPHINXOPTS=-Q
make linkcheck
BROKEN_LINKS_COUNT=`grep --extended-regexp "(fail|broken)" build/linkcheck/output.txt | wc -l`
if [ "$BROKEN_LINKS_COUNT" -gt "0" ]; then
    
    echo ERROR: There are external links that are broken. See the list below:
    grep --extended-regexp "(fail|broken)" build/linkcheck/output.txt
    exit 1
fi
echo All the links to external web sites point to pages that still exists.

echo ===============================================================================
echo Copying the Javadoc to the result. 
echo ===============================================================================

cd $WORKSPACE
rm --recursive --force ./build/html/itpilot/javadoc/*
cp --recursive --force ./javadoc/itp/* ./build/html/itpilot/javadoc/

rm --recursive --force ./build/html/scheduler/javadoc/*
cp --recursive --force ./javadoc/scheduler/* ./build/html/scheduler/javadoc/

rm --recursive --force ./build/html/vdp/javadoc/*
cp --recursive --force ./javadoc/vdp/* ./build/html/vdp/javadoc/

cd build/html
rm --force online_help-*.zip
zip -r -q "online_help-$GIT_BRANCH_PARSED-$BUILD_NUMBER.zip" ./
